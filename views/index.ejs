<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>NightShade Chat</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
</head>
<style>
    :root {
        --bg-gradient-start: #1a1c2e;
        --bg-gradient-end: #16192b;
        --accent-color: #7c4dff;
        --accent-hover: #9969ff;
        --sent-message-bg: linear-gradient(135deg, #7c4dff, #5c3dd6);
        --received-message-bg: #2a2d3e;
        --text-primary: #ffffff;
        --text-secondary: #b4b7c5;
        --border-color: #2f3446;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Inter", "Segoe UI",
            Roboto, sans-serif;
    }

    body {
        background: linear-gradient(135deg,
                var(--bg-gradient-start),
                var(--bg-gradient-end));
        color: var(--text-primary);
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        overflow: hidden;
    }

    .container {
        flex: 1;
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
        width: 100%;
        overflow-y: auto;
        height: 100vh;

    }


    .header {
        text-align: center;

        margin-top: -20px;
        margin-bottom: 20px;
        position: relative;
        padding: 1rem;
    }

    .header h1 {
        font-size: 2.5rem;
        font-weight: 800;
        background: linear-gradient(135deg, #7c4dff, #9969ff);
        background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 0.5rem;
    }

    .header p {
        color: var(--text-secondary);
        font-size: 1.1rem;
    }

    .header::after {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 150px;
        height: 150px;
        background: var(--accent-color);
        filter: blur(100px);
        z-index: -1;
        opacity: 0.5;
    }

    .messages {
        max-height: calc(100vh - 200px);
        background: rgba(26, 28, 46, 0.8);
        backdrop-filter: blur(10px);
        border: 1px solid var(--border-color);
        border-radius: 1.5rem;
        padding: 1.5rem;
        margin-bottom: 2rem;
        min-height: 60vh;
        max-height: 60vh;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .messages::-webkit-scrollbar {
        width: 6px;
    }

    .messages::-webkit-scrollbar-thumb {
        background: var(--accent-color);
        border-radius: 3px;
    }

    .message {
        max-width: 70%;
        padding: 1rem;
        border-radius: 1.2rem;
        position: relative;
        animation: slideIn 0.3s ease-out;
    }

    @keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .sent {
        background: var(--sent-message-bg);
        align-self: flex-end;
        border-bottom-right-radius: 0.3rem;
        box-shadow: 0 4px 15px rgba(124, 77, 255, 0.2);
    }

    .received {
        background: var(--received-message-bg);
        align-self: flex-start;
        border-bottom-left-radius: 0.3rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .msg {
        font-size: 1.1rem;
        line-height: 1.5;
        margin: 0.5rem 0;
    }


    .footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 0.8rem;
        font-size: 0.85rem;
        color: var(--text-secondary);
    }


    .newMessage {
        margin-top: auto;
        padding: 1.5rem;
        background: rgba(26, 28, 46, 0.8);
        backdrop-filter: blur(10px);
        border: 1px solid var(--border-color);
        border-radius: 1.5rem;
    }

    .newMessage form {
        display: grid;
        grid-template-columns: 1fr auto auto auto;
        gap: 1rem;
        align-items: center;
    }

    .newMessage input {
        background: var(--received-message-bg);
        border: 1px solid var(--border-color);
        color: var(--text-primary);
        padding: 1rem 1.5rem;
        border-radius: 1rem;
        font-size: 1rem;
        transition: all 0.3s ease;
    }

    .newMessage input:focus {
        outline: none;
        border-color: var(--accent-color);
        box-shadow: 0 0 0 3px rgba(124, 77, 255, 0.2);
    }

    .userType {
        position: relative;
    }

    select {
        background: var(--received-message-bg);
        color: var(--text-primary);
        border: 1px solid var(--border-color);
        padding: 0.8rem 1rem;
        border-radius: 0.8rem;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    select:focus {
        outline: none;
        border-color: var(--accent-color);
    }

    button {
        background: var(--accent-color);
        color: white;
        border: none;
        padding: 1rem;
        border-radius: 1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    button:hover {
        background: var(--accent-hover);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(124, 77, 255, 0.3);
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .action-buttons button {
        background: transparent;
        border: 1px solid var(--border-color);
        padding: 0.5rem;
    }

    .action-buttons button:hover {
        background: rgba(124, 77, 255, 0.1);
        border-color: var(--accent-color);
    }

    @media (max-width: 768px) {
        .container {
            padding: 1rem;
        }

        .message {
            max-width: 85%;
        }

        .newMessage form {
            grid-template-columns: 1fr;
        }

        .header h1 {
            font-size: 2rem;
        }
    }

    ::-webkit-scrollbar {
        width: 10px;
        height: 10px;
    }

    ::-webkit-scrollbar-track {
        background: rgba(26, 28, 46, 0.8);
        border-radius: 5px;
    }

    ::-webkit-scrollbar-thumb {
        background: linear-gradient(45deg,
                var(--accent-color),
                var(--accent-hover));
        border-radius: 5px;
        border: 2px solid rgba(26, 28, 46, 0.8);
    }

    ::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(45deg, var(--accent-hover), #b794f6);
    }


    .messages::-webkit-scrollbar {
        width: 8px;
    }

    .messages::-webkit-scrollbar-track {
        background: rgba(26, 28, 46, 0.8);
        border-radius: 4px;
        margin: 8px 0;
    }

    .messages::-webkit-scrollbar-thumb {
        background: linear-gradient(45deg,
                var(--accent-color),
                var(--accent-hover));
        border-radius: 4px;
        border: 2px solid rgba(26, 28, 46, 0.8);
        transition: all 0.3s ease;
    }

    .messages::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(45deg, var(--accent-hover), #b794f6);
    }

    * {
        scrollbar-width: thin;
        scrollbar-color: var(--accent-color) rgba(26, 28, 46, 0.8);
    }


    .messages {
        scrollbar-width: none;
        -ms-overflow-style: none;
    }

    .messages:hover {
        scrollbar-width: thin;
    }

    .messages {
        padding-right: 1rem;
        transition: padding-right 0.3s ease;
    }

    .messages:hover {
        padding-right: 0.5rem;
    }
@media (max-width: 768px) {
    .container {
        padding: 1rem;
        width: 100%;
    }

    .message {
        max-width: 85%;
    }

    .header h1 {
        font-size: 2rem;
    }

    .newMessage form {
        grid-template-columns: 1fr;
    }

    .newMessage input,
    .newMessage select,
    .newMessage button {
        width: 100%;
        margin-bottom: 1rem;
    }

    .action-buttons {
        flex-direction: column;
        gap: 1rem;
    }
}

</style>

<body>
    <div class="container">
        <div class="header">
            <h1>NightShade Chat</h1>
            <p>Experience seamless conversations in style</p>
        </div>

        <div class="messages">
            <% messages.forEach((msg, index)=> { %>
                <div class="message <%= (msg.sentFrom === user) ? 'sent' : 'received' %>">
                    <div class="details">
                        <div><i class="fas fa-user"></i>
                            <%= msg.sentFrom %>
                        </div>
                        <div class="msg">
                            <%= msg.message %>
                        </div>
                        <div><i class="fas fa-reply"></i>
                            <%= msg.sentTo %>
                        </div>
                    </div>

                    <div class="footer">
                        <div>
                            <i class="far fa-clock"></i>
                            <%= new Date(msg.instance).toLocaleDateString() %> â€¢ <%= new
                                    Date(msg.instance).toLocaleTimeString() %>
                        </div>

                        <div class="action-buttons">
                            <form method="POST" action="/message/<%= index %>?_method=DELETE">
                                <button title="Delete message">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </form>
                            <form method="GET" action="/message/<%= index %>/edit">
                                <button title="Edit message">
                                    <i class="fas fa-edit"></i>
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
                <% }) %>
        </div>

        <div class="newMessage">
            <form method="POST" action="/messages">
                <input type="text" name="message" placeholder="Share your thoughts..." required />
                <div class="userType">
                    <select name="sentFrom" id="sentFrom">
                        <option value="Shoaib" selected>Shoaib</option>
                        <option value="Kevin">Kevin</option>
                    </select>
                </div>
                <div class="userType">
                    <select name="sentTo" id="sentTo">
                        <option value="Kevin" selected>Kevin</option>
                        <option value="Shoaib">Shoaib</option>
                    </select>
                </div>
                <button type="submit" title="Send message">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const sentFromSelect = document.getElementById("sentFrom");
            const sentToSelect = document.getElementById("sentTo");
            const messagesContainer = document.querySelector(".messages");


            messagesContainer.scrollTop = messagesContainer.scrollHeight;


            const observer = new MutationObserver(() => {
                messagesContainer.scrollTo({
                    top: messagesContainer.scrollHeight,
                    behavior: "smooth",
                });
            });

            observer.observe(messagesContainer, { childList: true });


            sentFromSelect.addEventListener("change", () => {
                const selectedSentFrom = sentFromSelect.value;
                if (selectedSentFrom === "Shoaib") {
                    updateSentTo("Kevin", sentToSelect);
                } else if (selectedSentFrom === "Kevin") {
                    updateSentTo("Shoaib", sentToSelect);
                }
            });

            function updateSentTo(targetValue, sentToSelect) {
                for (let option of sentToSelect.options) {
                    option.disabled = option.value !== targetValue;
                }
                sentToSelect.value = targetValue;
            }

            const messages = document.querySelectorAll(".message");
            messages.forEach((message) => {
                message.addEventListener("mouseenter", () => {
                    message.style.transform = "translateY(-2px)";
                    message.style.transition = "transform 0.3s ease";
                });

                message.addEventListener("mouseleave", () => {
                    message.style.transform = "translateY(0)";
                });
            });
        });
    </script>
</body>

</html>
